@using RPMS_2023.Data
@page "/colouraddedit/{Code:system.string}"
@inject IColourService ColourService
@inject NavigationManager NavigationManager
<h1 style="text-align:center">@pagetitle</h1>
<EditForm Model="@colour" OnValidSubmit="@ColourSave" class="form-inline">
<div class="container">
        <!-- You may want to change some type="" choices to better suit your own data -->
        <div class='row'>
<div class='col-2'>
<label for = 'Desc'>Desc:</label>
</div>
<div class='col-4'>
<InputText @bind-Value = "colour.Desc" class='form-control' style='width:100%;' id = 'Desc'/></div>
<div class='col-2'>
<label for = 'System'>System:</label>
</div>
<div class='col-4'>
<InputCheckbox @bind-Value = "colour.System" class='form-control' id = 'System'/></div>
</div>
<div class="row">
<div class="col-12 errormsg">
    <DataAnnotationsValidator />
    <ValidationSummary />
</div>
</div>
<div class="row">
<div class="col-12 buttons">
<button class="btn btn-primary">@buttontext</button>
<button class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
</div>
</div>
</div>
</EditForm>
@code {
    // Create a new, empty Colour object
    Colour colour = new Colour();
    [Parameter]
    public string? Code { get; set; }
    // Set default page title and button text
    public string pagetitle = "Add a Colour";
    public string buttontext = "Add";
    //Executes on page open, set defaults on page.
    protected override async Task OnInitializedAsync()
    {
        // ============ If the passed-in Code is zero, assume new Colour.
        if (string.IsNullOrEmpty(Code))
        {
            // Use this block to set for defaults (optional)
        }
        else
        {
            colour = await ColourService.Colour_GetOne(Code);
            // Change page title and button text since this is an edit.
            pagetitle = "Edit Colour";
            buttontext = "Update";
        }
    }
    // Executes OnValidSubmit of EditForm above.
    protected async Task ColourSave()
    {
        if (string.IsNullOrEmpty(colour.Code))
        {
            // Insert if Code is zero.
            await ColourService.ColourInsert(colour);
        }
        else
        {
            // Update if Code not 0
            await ColourService.ColourUpdate(colour);
        }
        NavigationManager.NavigateTo("/colourlist");
    }
    //Executes if user clicks the Cancel button.
    protected void Cancel()
    {
        NavigationManager.NavigateTo("/colourlist");
    }
}
